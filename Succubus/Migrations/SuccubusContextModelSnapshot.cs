// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Succubus.Database.Context;

namespace Succubus.Migrations
{
    [DbContext(typeof(SuccubusContext))]
    internal class SuccubusContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("Succubus.Database.Models.Color", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("TEXT");

                b.Property<byte>("Blue")
                    .HasColumnType("INTEGER");

                b.Property<DateTime>("DateAdded")
                    .HasColumnType("TEXT");

                b.Property<byte>("Green")
                    .HasColumnType("INTEGER");

                b.Property<string>("Name")
                    .HasColumnType("TEXT");

                b.Property<byte>("Red")
                    .HasColumnType("INTEGER");

                b.HasKey("Id");

                b.ToTable("Colors");
            });

            modelBuilder.Entity("Succubus.Database.Models.Cosplayer", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("TEXT");

                b.Property<string>("Aliases")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("Booth")
                    .HasColumnType("TEXT");

                b.Property<DateTime>("DateAdded")
                    .HasColumnType("TEXT");

                b.Property<string>("Instagram")
                    .HasColumnType("TEXT");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("ProfilePicture")
                    .HasColumnType("TEXT");

                b.Property<string>("Twitter")
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("Cosplayers");
            });

            modelBuilder.Entity("Succubus.Database.Models.Server", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("TEXT");

                b.Property<DateTime>("DateAdded")
                    .HasColumnType("TEXT");

                b.Property<string>("Locale")
                    .HasColumnType("TEXT");

                b.Property<string>("Name")
                    .HasColumnType("TEXT");

                b.Property<ulong>("ServerId")
                    .HasColumnType("INTEGER");

                b.HasKey("Id");

                b.ToTable("Servers");
            });

            modelBuilder.Entity("Succubus.Database.Models.Set", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("TEXT");

                b.Property<string>("Aliases")
                    .HasColumnType("TEXT");

                b.Property<Guid?>("CosplayerId")
                    .HasColumnType("TEXT");

                b.Property<DateTime>("DateAdded")
                    .HasColumnType("TEXT");

                b.Property<string>("FilePrefix")
                    .HasColumnType("TEXT");

                b.Property<string>("FolderName")
                    .HasColumnType("TEXT");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("SetPreview")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<uint>("Size")
                    .HasColumnType("INTEGER");

                b.Property<int>("YabaiLevel")
                    .HasColumnType("INTEGER");

                b.HasKey("Id");

                b.HasIndex("CosplayerId");

                b.ToTable("Sets");
            });

            modelBuilder.Entity("Succubus.Database.Models.User", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("TEXT");

                b.Property<DateTime>("DateAdded")
                    .HasColumnType("TEXT");

                b.Property<string>("Discriminator")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<ulong>("Experience")
                    .HasColumnType("INTEGER");

                b.Property<ulong>("Level")
                    .HasColumnType("INTEGER");

                b.Property<ulong>("UserId")
                    .HasColumnType("INTEGER");

                b.Property<string>("Username")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("Users");
            });

            modelBuilder.Entity("Succubus.Database.Models.Set", b =>
            {
                b.HasOne("Succubus.Database.Models.Cosplayer", "Cosplayer")
                    .WithMany("Sets")
                    .HasForeignKey("CosplayerId");
            });
#pragma warning restore 612, 618
        }
    }
}